name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
          ACCEPT_EULA: "Y"

    env:
      ConnectionStrings__defaultDB: ${{ secrets.DEFAULT_CONNECTION }}
      InnfinitySecretKey: ${{ secrets.SECRET_KEY }}
      InnfinityIssuer: ${{ secrets.ISSUER }}
      InnfinityAudience: ${{ secrets.AUDIENCE }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore 

    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Wait for SQL Server to be ready
      run: |
        for i in {1..30}; do
          if nc -z sqlserver 1433; then
            echo "SQL Server is ready"
            exit 0
          fi
          echo "Waiting for SQL Server to be ready..."
          sleep 2
        done
        echo "SQL Server did not start in time"
        exit 1

    - name: Run migrations
      run: dotnet ef database update --context AppDbContext --connection "${{ secrets.DEFAULT_CONNECTION }}" --startup-project ./HotelBookingPlatform.API/HotelBookingPlatform.API.csproj

    - name: Test
      run: dotnet test ./HotelBookingPlatform.API.IntegrationTests --no-restore --verbosity minimal

    - name: Test
      run: dotnet test ./HotelBookingPlatform.Infrastructure.IntegrationTests --no-restore --verbosity minimal
      env:
        ConnectionStrings__defaultDB: ${{ secrets.DEFAULT_CONNECTION }}

