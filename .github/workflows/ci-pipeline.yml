name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build-and-test-app:
    runs-on: ubuntu-latest
    
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
          ACCEPT_EULA: "Y"

    env:
      ConnectionStrings__defaultDB: ${{ secrets.DEFAULT_CONNECTION }}
      InnfinitySecretKey: ${{ secrets.SECRET_KEY }}
      InnfinityIssuer: ${{ secrets.ISSUER }}
      InnfinityAudience: ${{ secrets.AUDIENCE }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore 

    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef
      
    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-restore --verbosity minimal
      continue-on-error: true

  
  build-and-push-image:
    needs: build-and-test-app
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
        DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
      run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    
    - name: Build the Docker image
      run: docker build -f ./HotelBookingPlatform.API/Dockerfile -t janaherself/hotel-booking-system:latest .

    - name: Push to Docker Hub
      run: docker push janaherself/hotel-booking-system:latest
